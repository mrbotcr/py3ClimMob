"""Create participation consent question for the forms

Revision ID: 3bd8d9e330d6
Revises: 23d2f8154412
Create Date: 2023-07-27 15:49:50.347436

"""
from alembic import op
from sqlalchemy import String, Integer
from sqlalchemy.sql import table, column

# revision identifiers, used by Alembic.
revision = "3bd8d9e330d6"
down_revision = "23d2f8154412"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###

    questions = [
        {
            "question_id": 164,
            "question_code": "consentofparticipation",
            "question_name": "Consent of participation",
            "question_desc": "Do you consent to participate in this project ?",
            "question_dtype": 5,
            "user_name": "bioversity",
            "question_requiredvalue": 1,
            "qstgroups_id": "c3847f8938b7",
            "qstgroups_user": "bioversity",
            "question_lang": "en",
        }
    ]

    questions_table = table(
        "question",
        column("question_id", Integer),
        column("question_code", String),
        column("question_name", String),
        column("question_desc", String),
        column("question_dtype", String),
        column("user_name", String),
        column("question_requiredvalue", String),
        column("qstgroups_id", String),
        column("qstgroups_user", String),
        column("question_lang", String),
    )
    try:
        op.bulk_insert(questions_table, questions)
    except Exception as e:
        print(e)
        pass

    qstoptions = [
        {"question_id": 164, "value_code": 1, "value_desc": "Yes", "value_order": 1},
        {"question_id": 164, "value_code": 2, "value_desc": "No", "value_order": 2},
    ]

    qstoptions_table = table(
        "qstoption",
        column("question_id", Integer),
        column("value_code", Integer),
        column("value_desc", String),
        column("value_order", Integer),
    )

    try:
        op.bulk_insert(qstoptions_table, qstoptions)
    except Exception as e:
        print(e)
        pass

    i18n_question_inserts = [
        {
            "question_id": 164,
            "lang_code": "es",
            "question_desc": "¿Da su consentimiento para participar en este proyecto?",
            "question_name": "Consentimiento de participación",
        },
        {
            "question_id": 164,
            "lang_code": "fr",
            "question_desc": "Consentez-vous à participer à ce projet ?",
            "question_name": "Consentement de participation",
        },
    ]

    i18n_question = table(
        "i18n_question",
        column("question_id", Integer),
        column("lang_code", String),
        column("question_desc", String),
        column("question_name", String),
    )
    try:
        op.bulk_insert(i18n_question, i18n_question_inserts)
    except Exception as e:
        print(e)
        pass

    i18n_qstoptions = [
        {"question_id": 164, "value_code": 1, "value_desc": "Sí", "lang_code": "es"},
        {"question_id": 164, "value_code": 2, "value_desc": "No", "lang_code": "es"},
        {"question_id": 164, "value_code": 1, "value_desc": "Oui", "lang_code": "fr"},
        {"question_id": 164, "value_code": 2, "value_desc": "Non", "lang_code": "fr"},
    ]

    i18n_qstoptions_table = table(
        "i18n_qstoption",
        column("question_id", Integer),
        column("value_code", Integer),
        column("value_desc", String),
        column("lang_code", String),
    )

    try:
        op.bulk_insert(i18n_qstoptions_table, i18n_qstoptions)
    except Exception as e:
        print(e)
        pass

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    print("")
    # ### end Alembic commands ###
