"""Create tables ProjectLocation and I18nProjectLocation

Revision ID: fa9f3d8cccf8
Revises: 257a9814b1c1
Create Date: 2024-11-18 10:54:26.345300

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = "fa9f3d8cccf8"
down_revision = "257a9814b1c1"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "project_location",
        sa.Column("plocation_id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("plocation_name", sa.Unicode(length=120), nullable=False),
        sa.Column("plocation_lang", sa.Unicode(length=5), nullable=False),
        sa.ForeignKeyConstraint(
            ["plocation_lang"],
            ["i18n.lang_code"],
            name=op.f("fk_project_location_plocation_lang_i18n"),
        ),
        sa.PrimaryKeyConstraint("plocation_id", name=op.f("pk_project_location")),
    )
    op.create_table(
        "i18n_project_location",
        sa.Column("plocation_id", sa.Integer(), nullable=False),
        sa.Column("lang_code", sa.Unicode(length=5), nullable=False),
        sa.Column("plocation_name", sa.Unicode(length=120), nullable=False),
        sa.ForeignKeyConstraint(
            ["lang_code"],
            ["i18n.lang_code"],
            name=op.f("fk_i18n_project_location_lang_code_i18n"),
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["plocation_id"],
            ["project_location.plocation_id"],
            name=op.f("fk_i18n_project_location_plocation_id_project_location"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint(
            "plocation_id", "lang_code", name=op.f("pk_i18n_project_location")
        ),
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("i18n_project_location")
    op.drop_table("project_location")
    # ### end Alembic commands ###
